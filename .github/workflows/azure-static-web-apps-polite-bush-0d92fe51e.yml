name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    env:
      NODE_VERSION: '16'                    # 固定 Node 16，兼容你的老依赖
      NPM_CONFIG_LEGACY_PEER_DEPS: 'true'   # 等价于 --legacy-peer-deps，避免 peer 冲突
      NPM_CONFIG_REGISTRY: https://registry.npmjs.org/

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      # 可选：显式设置 Node 版本（有些 runner 默认不是 16）
      - name: Use Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # ⚠️ 移除了“Install OIDC Client ...”这步，不再在仓库根目录执行 npm install

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_POLITE_BUSH_0D92FE51E }}
          action: upload
          app_location: "/"         # 确认这里就是含 package.json 的前端目录；否则改成你的子目录
          api_location: ""
          output_location: "dist"
          github_id_token: ${{ steps.idtoken.outputs.result }} # 其实也可省略，action会处理 OIDC
